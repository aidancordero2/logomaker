name: Publish logomaker to TestPyPI

on:
  workflow_dispatch:
  schedule:
    - cron: '0/30 * * * *'
  push:
    tags:
      - 'v*'  # version tags for PyPI
      - 'test*'  # test tags for TestPyPI
            
      
jobs:
  test:
    # This will run the tests for each Python version
    name: Run Python Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
        pip install pytest hatch

    - name: Configure matplotlib backend
      run: |
        mkdir -p $HOME/.config/matplotlib
        echo "backend: Agg" > $HOME/.config/matplotlib/matplotlibrc

    - name: Run tests
      run: |
        pip install -i https://test.pypi.org/simple/ logomaker-acordero
        python -c "from logomaker_acordero import logomaker; logomaker.run_tests()"

  create-release:
    # This will create a release on GitHub, automatically triggering a build on ReadTheDocs via a webhook
    name: Create GitHub Release
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Create GitHub Release
      if: github.ref_type == 'tag'
      uses: softprops/action-gh-release@v1
      with:
        generate_release_notes: true
        name: Release ${{ github.ref_name }}
        prerelease: ${{ startsWith(github.ref_name, 'test') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
  build:
    name: Build
    needs: [test, create-release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
    - name: Debug
      run: |
        echo "github.ref = ${{ github.ref }}"
        echo "github.event_name = ${{ github.event_name }}"
        echo "github.sha = ${{ github.sha }}"
        echo "github.base_ref = ${{ github.base_ref }}"
        echo "github.ref_type = ${{ github.ref_type }}"
        echo "github.ref_name = ${{ github.ref_name }}"
        
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
        fetch-depth: 0  # Get all history for branch checking
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine hatch
        
    - name: Build package
      run: python -m build
      
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions-${{ matrix.python-version }}
        path: dist/
        
  publish-to-testpypi:
    name: Publish to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/logomaker-acordero

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        pattern: python-package-distributions-*
        name: python-package-distributions
        path: dist/
    - name: Publish distribution ðŸ“¦ to TestPyPI
      if: github.ref_type == 'tag' && startsWith(github.ref_name, 'test')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
  
