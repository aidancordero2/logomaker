name: Build, Test and Publish

on:
  push:  # Run on all pushes
  pull_request:  # Run on all PRs

jobs:
  test:
    name: Run Python Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
        pip install pytest

    - name: Configure matplotlib backend
      run: |
        mkdir -p $HOME/.config/matplotlib
        echo "backend: Agg" > $HOME/.config/matplotlib/matplotlibrc

    - name: Run tests
      run: |
        python -c "import logomaker; logomaker.run_tests()"

  publish:
    name: Build and Publish
    needs: [test]
    runs-on: ubuntu-latest
    # Run publish job it's a tag push starting with v or test
    # Use v* tags (e.g., v1.0.0) for PyPI releases (must be on master branch)
    # Use test* tags (e.g., test1.0.0) for TestPyPI releases
    # if: (startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/test'))
    
    steps:
    - name: Debug
      run: |
        echo "github.ref = ${{ github.ref }}"
        echo "github.event_name = ${{ github.event_name }}"
        echo "github.sha = ${{ github.sha }}"
        echo "github.base_ref = ${{ github.base_ref }}"
    
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Get all history for branch checking
        
    - name: Check if on master
      run: |
        if [[ "$(git branch --contains ${{ github.sha }}) " != *" master "* ]]; then
          echo "Not on master branch"
          exit 1
        fi
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Publish to PyPI
      if: github.ref == 'refs/heads/master' && startsWith(github.ref, 'refs/tags/v')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload dist/*
      
    - name: Publish to TestPyPI
      if: startsWith(github.ref, 'refs/tags/test')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
      run: twine upload dist/*

      